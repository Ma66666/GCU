<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 使用扫描机制，扫描控制器类 -->
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="service" />
	<context:component-scan
		base-package="controller" />

	<mvc:annotation-driven />
	<!-- annotation-driven用于简化开发的配置， 注解DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter -->
	<!-- 使用resources过滤掉不需要dispatcher servlet的资源。 使用resources时，必须使用annotation-driven，不然resources元素会阻止任意控制器被调用。 -->
	<!-- 配置静态资源，允许js目录下所有文件可见 -->
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>

	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 配置拦截器作用的路径 -->
			<mvc:mapping path="/**" />
			<bean class="interceptor.TestInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<!-- 配置拦截器作用的路径 -->
			<mvc:mapping path="/user/list" />
			<mvc:mapping path="/user/add" />
			<bean class="interceptor.AdminInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/springtest?characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<!-- 最大连接数 -->
		<property name="maxTotal" value="30" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 初始化连接数 -->
		<property name="initialSize" value="5" />
	</bean>
	<!-- 添加事务支持 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启事务注解 -->
	<tx:annotation-driven
		transaction-manager="txManager" />
	<!-- 配置MyBatis工厂，同时指定数据源，并与MyBatis完美整合 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- configLocation的属性值为MyBatis的核心配置文件 -->
		<property name="configLocation"
			value="classpath:mybatis/mybatis-config.xml" />
	</bean>
	<!--Mapper代理开发，使用Spring自动扫描MyBatis的接口并装配 （Spring将指定包中所有被@Mapper注解标注的接口自动装配为MyBatis的映射接口） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- mybatis-spring组件的扫描器 -->
		<property name="basePackage" value="dao" />
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
</beans>
